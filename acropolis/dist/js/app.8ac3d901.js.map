{"version":3,"file":"js/app.8ac3d901.js","mappings":"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","sources":["webpack://acropolis/./src/App.vue","webpack://acropolis/./src/App.vue?7ccd","webpack://acropolis/./node_modules/vue-loader/dist/templateLoader.js","webpack://acropolis/./src/components/AcropolisMain.vue","webpack://acropolis/./src/game/systems/loadingBar.ts","webpack://acropolis/./src/game/utils/stringHandler.ts","webpack://acropolis/./src/game/phaserHelper/loaders.ts","webpack://acropolis/./src/game/constants/constants.ts","webpack://acropolis/./src/game/systems/playerSpritesheetAnimations.ts","webpack://acropolis/./src/game/utils/cooldownTimer.ts","webpack://acropolis/./src/game/systems/createGameControllerSystem.ts","webpack://acropolis/./src/game/components/components.ts","webpack://acropolis/./src/game/systems/createSpriteSystem.ts","webpack://acropolis/./src/game/systems/createEntitySystem.ts","webpack://acropolis/./src/game/utils/transformManager.ts","webpack://acropolis/./src/game/systems/flipPlayer.ts","webpack://acropolis/./src/game/systems/createTargetMovementSystem.ts","webpack://acropolis/./src/game/systems/createTimeSystem.ts","webpack://acropolis/./src/game/systems/playerPlayAnimations.ts","webpack://acropolis/./src/game/systems/createAnimationSystem.ts","webpack://acropolis/./src/game/systems/createResourceSpriteSystem.ts","webpack://acropolis/./src/game/systems/createHealthBarSystem.ts","webpack://acropolis/./src/game/systems/createItemsSystem.ts","webpack://acropolis/./src/game/systems/createSkillsSystem.ts","webpack://acropolis/./src/game/scenes/Game.ts","webpack://acropolis/../shared/networkUpdateStateSystem.js","webpack://acropolis/./src/components/AcropolisMain.vue?1cd1","webpack://acropolis/./node_modules/vue-loader/dist/index.js","webpack://acropolis/./src/views/Home.vue","webpack://acropolis/./src/router/index.ts","webpack://acropolis/./src/main.ts","webpack://acropolis/webpack/bootstrap","webpack://acropolis/webpack/runtime/amd options","webpack://acropolis/webpack/runtime/chunk loaded","webpack://acropolis/webpack/runtime/compat get default export","webpack://acropolis/webpack/runtime/define property getters","webpack://acropolis/webpack/runtime/global","webpack://acropolis/webpack/runtime/hasOwnProperty shorthand","webpack://acropolis/webpack/runtime/make namespace object","webpack://acropolis/webpack/runtime/node module decorator","webpack://acropolis/webpack/runtime/jsonp chunk loading","webpack://acropolis/webpack/startup"],"sourcesContent":["<template>\n<div>\n  <!-- <div id=\"nav\">\n    <router-link to=\"/\">Home</router-link> |\n    <router-link to=\"/about\">About</router-link>\n  </div> -->\n  <router-view/> \n  </div>\n</template>\n\n<style>\nbody{\n  background: black;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=7f5983af\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=7f5983af&lang=css\"\n\nimport exportComponent from \"C:\\\\Proyectos\\\\acropolisgame\\\\acropolis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"home\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AcropolisMain = _resolveComponent(\"AcropolisMain\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_AcropolisMain)\n  ]))\n}","<template>\n  <div>\n    <div v-if=\"!isLoggedIn\">\n      <h3\n        style=\"\n          color: #fff;\n          text-align: center;\n          padding: 5px;\n          max-width: 200px;\n          margin: 0 auto;\n        \"\n      >\n        Welcome to Acropolis MMORPG Beta Testing!\n      </h3>\n      <p\n        style=\"\n          color: #fff;\n          text-align: center;\n          border: 1px solid white;\n          padding: 5px;\n          max-width: 200px;\n          margin: 0 auto;\n        \"\n        @click=\"initGame\"\n      >\n       {{ loginText}}\n      </p>\n    </div>\n    <div v-else>\n      <div style=\"text-align: center; margin: 25px auto\">\n        <h3 style=\"color: #fff\">Acropolis Playgrounds BETA Development!</h3>\n        <div id=\"phaser-example\" style=\"border-radius: 100px\"></div>\n        <h3 style=\"color: #fff\">\n          Click anywhere to move around or press \"QWERASDF\" key for skills.\n        </h3>\n        <a href=\"https://www.acropolisrpg.com/\" style=\"color: #fff\"\n          >Go to Acropolist home page</a\n        >\n      </div>\n\n      <p style=\"color: #fff; text-align: center\">\n        The first time you login you will receive a reward of 100 $ACR, be wise\n        because that's the only currency that will be used inside and outside\n        the game.\n      </p>\n      <h3 style=\"color: #fff; text-align: center\">\n        If you can't see the game screen refresh and login again!\n      </h3>\n      <p style=\"color: #fff; text-align: center\">\n        Server stats.\n        <span id=\"online\">0</span> users online. <span id=\"fps\">0</span> server\n        fps. <span id=\"worldX\">0</span> server fps.\n        <span id=\"worldY\">0</span> server fps.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Phaser from 'phaser';\nimport Game from '../game/scenes/Game';\n// import Web3 from 'web3';\n// import Web3Token from 'web3-token';\nimport io from 'socket.io-client';\n\n//local\n//const socket = io();\n// prod\nlet socket;\nif (process.env.ENVI === 'production') {\n  socket = io(window.location.origin, { path: '/gameSocket' });\n} else {\n  // socket = io();\n  socket = io(window.location.origin, { path: '/gameSocket' });\n}\n\n// import TitleScreen from '../game/scenes/TileScreen'\nimport Web3 from 'web3';\nimport Web3Token from 'web3-token';\nimport { defineComponent } from 'vue'\nimport { networkUpdateStateSystem } from '../../../shared/networkUpdateStateSystem';\nexport default defineComponent({\n  name: 'AcropolisMain',\n  data() {\n    return {\n      isLoggedIn: false,\n      loginText: 'Click here to Login!'\n    };\n  },\n  methods: {\n    initGame() {\n      // game.scene.add('titlescreen', TitleScreen)\n      const test = async () => {\n        await socket.once('connect', () => {\n          // console.log('connected');\n          socket.emit('register', (socketId) => {\n            console.log('socketId', socketId);\n            // this.currentPlayerId = socketId;\n          });\n          //this.ball.anchor.set(0.5, 0.5);\n        });\n\n        // Connection to MetaMask wallet\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n        // getting address from which we will sign message\n        const address = (await web3.eth.getAccounts())[0];\n\n        // generating a token with 1 day of expiration time\n        const token = await Web3Token.sign(\n          (msg) => web3.eth.personal.sign(msg, address),\n          '1d'\n        );\n        console.log(token);\n        socket.emit('login', token);\n        // socket.emit('login');\n      };\n\n      test();\n    }\n  },\n  mounted() {\n    socket.on('loggedIn', (data) => {\n      const {isLoggedIn, entityId} = data\n      console.log('logeeasdfa', isLoggedIn)\n      // !important prod\n      if(!isLoggedIn) {\n        this.loginText = 'Account already logged in!'\n        return\n      }\n      window.acropolis = {}\n      window.acropolis.networkSystem = networkUpdateStateSystem(socket)\n      window.acropolis.currentPlayerId = entityId\n      window.acropolis.socket = socket\n      this.isLoggedIn = isLoggedIn;\n      setTimeout(() => {\n        const config = {\n          type: Phaser.AUTO,\n          scale: {\n            parent: 'phaser-example',\n            mode: Phaser.Scale.FIT,\n            width: 600,\n            height: 600\n          }\n        };\n        const game = new Phaser.Game(config);\n        game.scene.add('acropolisGame', Game);\n        game.scene.start('acropolisGame', { socket });\n      }, 3000);\n    });\n  }\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n","const loadingBar = (scene) => {\n  const progressBar = scene.add.graphics()\n  const progressBox = scene.add.graphics()\n  const text = scene.add.text(170, 240, 'Loading Acropolis...')\n\n  progressBox.fillStyle(0x222222, 0.8)\n  progressBox.fillRect(0, 270, 600, 50)\n\n  scene.load.on('progress', function (value) {\n    console.log(value)\n    progressBar.clear()\n    progressBar.fillStyle(0xffffff, 1)\n    progressBar.fillRect(10, 280, 590 * value, 30)\n  })\n\n  scene.load.on('fileprogress', function (file) {\n    console.log(file.src)\n  })\n  scene.load.on('complete', function () {\n    console.log('complete')\n    progressBar.destroy()\n    progressBox.destroy()\n    text.destroy()\n  })\n}\n\nexport default loadingBar\n","// export const pathHandler = (url) => {\n//   let pathPrefix = ''\n//   if (process.env.ENVI === 'production') {\n//     pathPrefix = '/game'\n//   }\n//   return pathPrefix + url\n// }\n\nexport const pathHandler = (url) => {\n  const pathPrefix = '/game';\n  return pathPrefix + url;\n};\n","import { pathHandler } from '../utils/stringHandler'\n\nexport const loadImage = (scene, key, url) => {\n  return scene.load.image(key, pathHandler(url))\n}\n\nexport const loadTilemapTiledJSON = (scene, key, url) => {\n  return scene.load.tilemapTiledJSON(key, pathHandler(url))\n}\n\nexport const loadSpritesheet = (scene, key, url, frameSizing) => {\n  return scene.load.spritesheet(key, pathHandler(url), frameSizing)\n}\n","const frameSize = (frameWidth, frameHeight) => ({\n  frameWidth,\n  frameHeight\n})\n\nexport const FRAME_SIZE_24_24 = frameSize(24, 24)\nexport const FRAME_SIZE_32_32 = frameSize(32, 32)\nexport const FRAME_SIZE_64_64 = frameSize(64, 64)\nexport const FRAME_SIZE_96_96 = frameSize(96, 96)\nexport const FRAME_SIZE_16_16 = frameSize(16, 16)\n","const animatedPlayer = (scene) => {\n  // Body\n  const running = {\n    key: 'running',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      start: 128,\n      end: 135\n    }),\n    frameRate: 15,\n    repeat: -1\n  }\n  scene.anims.create(running)\n  const idle = {\n    key: 'idle',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      frames: [128]\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(idle)\n  const attack = {\n    key: 'attack',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      start: 1152,\n      end: 1155\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(attack)\n  const mining = {\n    key: 'mining',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      start: 8 * 8 * 31,\n      end: 8 * 8 * 31 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(mining)\n  const gathering = {\n    key: 'gathering',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      start: 8 * 8 * 10,\n      end: 8 * 8 * 10 + 2\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(gathering)\n  const chopping = {\n    key: 'chopping',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      start: 8 * 8 * 35,\n      end: 8 * 8 * 35 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(chopping)\n  const fishing = {\n    key: 'fishing',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      start: 8 * 8 * 47,\n      end: 8 * 8 * 47 + 4\n    }),\n    frameRate: 7,\n    repeat: 0\n  }\n  scene.anims.create(fishing)\n  const watering = {\n    key: 'watering',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      start: 8 * 8 * 39,\n      end: 8 * 8 * 39 + 1\n    }),\n    frameRate: 3,\n    repeat: -1\n  }\n  scene.anims.create(watering)\n  const shoveling = {\n    key: 'shoveling',\n    frames: scene.anims.generateFrameNumbers('bodySpriteSheet', {\n      start: 8 * 8 * 43,\n      end: 8 * 8 * 43 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(shoveling)\n  // Shoes\n  const runningShoes = {\n    key: 'runningShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      start: 200,\n      end: 207\n    }),\n    frameRate: 15,\n    repeat: -1\n  }\n  scene.anims.create(runningShoes)\n  const idleShoes = {\n    key: 'idleShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      frames: [160]\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(idleShoes)\n  const attackShoes = {\n    key: 'attackShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      start: 1440,\n      end: 1443\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(attackShoes)\n  const miningShoes = {\n    key: 'miningShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      start: 2480,\n      end: 2483\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(miningShoes)\n  const gatheringShoes = {\n    key: 'gatheringShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      start: 8 * 10 * 10,\n      end: 8 * 10 * 10 + 2\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(gatheringShoes)\n  const choppingShoes = {\n    key: 'choppingShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      start: 8 * 10 * 35,\n      end: 8 * 10 * 35 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(choppingShoes)\n  const fishingShoes = {\n    key: 'fishingShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      start: 8 * 10 * 47,\n      end: 8 * 10 * 47 + 4\n    }),\n    frameRate: 7,\n    repeat: 0\n  }\n  scene.anims.create(fishingShoes)\n  const wateringShoes = {\n    key: 'wateringShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      start: 8 * 10 * 39,\n      end: 8 * 10 * 39\n    }),\n    frameRate: 3,\n    repeat: -1\n  }\n  scene.anims.create(wateringShoes)\n  const shovelingShoes = {\n    key: 'shovelingShoes',\n    frames: scene.anims.generateFrameNumbers('shoesSpriteSheet', {\n      start: 8 * 10 * 43,\n      end: 8 * 10 * 43 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(shovelingShoes)\n  //Hair\n  const runningHair = {\n    key: 'runningHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      start: 8 * 14 * 2,\n      end: 8 * 14 * 2 + 7\n    }),\n    frameRate: 15,\n    repeat: -1\n  }\n  scene.anims.create(runningHair)\n  const idleHair = {\n    key: 'idleHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      frames: [8 * 14 * 2]\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(idleHair)\n  const attackHair = {\n    key: 'attackHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      start: 8 * 14 * 18,\n      end: 8 * 14 * 18 + 3\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(attackHair)\n  const miningHair = {\n    key: 'miningHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      start: 8 * 14 * 31,\n      end: 8 * 14 * 31 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(miningHair)\n  const gatheringHair = {\n    key: 'gatheringHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      start: 8 * 14 * 10,\n      end: 8 * 14 * 10 + 2\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(gatheringHair)\n  const choppingHair = {\n    key: 'choppingHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      start: 8 * 14 * 35,\n      end: 8 * 14 * 35 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(choppingHair)\n  const fishingHair = {\n    key: 'fishingHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      start: 8 * 14 * 47,\n      end: 8 * 14 * 47 + 4\n    }),\n    frameRate: 7,\n    repeat: 0\n  }\n  scene.anims.create(fishingHair)\n  const wateringHair = {\n    key: 'wateringHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      start: 8 * 14 * 39,\n      end: 8 * 14 * 39\n    }),\n    frameRate: 3,\n    repeat: -1\n  }\n  scene.anims.create(wateringHair)\n  const shovelingHair = {\n    key: 'shovelingHair',\n    frames: scene.anims.generateFrameNumbers('gentlemanHairSpriteSheet', {\n      start: 8 * 14 * 43,\n      end: 8 * 14 * 43 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(shovelingHair)\n\n  // Clothes\n  const runningClothes = {\n    key: 'runningClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      start: 160,\n      end: 167\n    }),\n    frameRate: 15,\n    repeat: -1\n  }\n  scene.anims.create(runningClothes)\n\n  const idleClothes = {\n    key: 'idleClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      frames: [160]\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(idleClothes)\n  const attackClothes = {\n    key: 'attackClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      start: 1440,\n      end: 1443\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(attackClothes)\n  const miningClothes = {\n    key: 'miningClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      start: 2480,\n      end: 2483\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(miningClothes)\n  const gatheringClothes = {\n    key: 'gatheringClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      start: 8 * 10 * 10,\n      end: 8 * 10 * 10 + 2\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(gatheringClothes)\n  const choppingClothes = {\n    key: 'choppingClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      start: 8 * 10 * 35,\n      end: 8 * 10 * 35 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(choppingClothes)\n  const fishingClothes = {\n    key: 'fishingClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      start: 8 * 10 * 47,\n      end: 8 * 10 * 47 + 4\n    }),\n    frameRate: 7,\n    repeat: 0\n  }\n  scene.anims.create(fishingClothes)\n  const wateringClothes = {\n    key: 'wateringClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      start: 8 * 10 * 39,\n      end: 8 * 10 * 39 + 1\n    }),\n    frameRate: 3,\n    repeat: -1\n  }\n  scene.anims.create(wateringClothes)\n  const shovelingClothes = {\n    key: 'shovelingClothes',\n    frames: scene.anims.generateFrameNumbers('clothesSpriteSheet', {\n      start: 8 * 10 * 43,\n      end: 8 * 10 * 43 + 4\n    }),\n    frameRate: 7,\n    repeat: -1\n  }\n  scene.anims.create(shovelingClothes)\n}\n\nexport default animatedPlayer\n","// const cooldownTimer = (cooldowne) => {\r\n//   let initTime = Date.now()\r\n//   const remainigTime = () => {\r\n//     let  counter = cooldowne - (Date.now() - initTime)\r\n//     if (counter < 0 ) {\r\n//       counter = cooldowne\r\n//       initTime = Date.now()\r\n//     }\r\n//     return  counter\r\n//   }\r\n//   return {\r\n//     remainigTime\r\n//   }\r\n// }\r\n\r\n// export default cooldownTimer\r\n\r\nexport const cooldownTimer = (cooldownTime) => {\r\n  const timer = {\r\n    cooldownTime,\r\n    currentTime: cooldownTime,\r\n    isReady: true,\r\n    triggered: false\r\n  }\r\n\r\n  const timeCounter = (deltaTime) => {\r\n    if (timer.isReady && timer.triggered && timer.currentTime === cooldownTime) {\r\n      timer.isReady = false\r\n      timer.currentTime = timer.cooldownTime\r\n    } else if (!timer.isReady && timer.triggered) {\r\n      timer.currentTime = timer.currentTime - deltaTime\r\n      if (timer.currentTime < 0) {\r\n        timer.currentTime = cooldownTime\r\n        timer.triggered = false\r\n        timer.isReady = true\r\n      }\r\n    }\r\n  }\r\n\r\n  const trigger = () => {\r\n    timer.triggered = true\r\n  }\r\n  return { timer, timeCounter, trigger }\r\n}\n","import { defineSystem } from 'bitecs';\nimport { cooldownTimer } from '../utils/cooldownTimer';\n\nconst createGameControllerSystem = (scene: Phaser.Scene, socket) => {\n  // const currentPlayer = player;\n  const inputKeys = 'Q,W,E,R,A,S,D,F';\n  const keys: any = scene.input.keyboard.addKeys(inputKeys);\n  const inputKeysList = inputKeys.split(',');\n  const cooldownTime = cooldownTimer(100);\n  const activePointer = scene.input.activePointer;\n  return defineSystem((world) => {\n    const currentPlayer =\n      window.acropolis.networkSystem.getLocalEntityByNetworkId(\n        window.acropolis.currentPlayerId\n      );\n    // TODO use server time instead local time.\n    cooldownTime.timeCounter(window.acropolis.timeSystem.clientDeltaTimeNoFR);\n    // console.log('ooldownTime.timer.isReady', cooldownTime.timer.isReady)\n    // console.log('gamecontroller timer', cooldownTime.timer.currentTime)\n    // console.log('gamecontroller timer', cooldownTime.timer.isReady)\n    // TODO Move to network System?\n    for (let i = 0; i < inputKeysList.length; i++) {\n      const key = inputKeysList[i];\n      if (keys[key].isDown) {\n        switch (key) {\n          case 'Q':\n            if (cooldownTime.timer.isReady) {\n              cooldownTime.trigger()\n              socket.emit('playerTarget', {\n                x: currentPlayer.position.x,\n                y: currentPlayer.position.y\n              });\n              socket.emit('playerAction', 'skill');\n              socket.emit('playerSkillPosition', {\n                x: activePointer.worldX,\n                y: activePointer.worldY\n              });\n            }\n            currentPlayer.action = 'skill';\n\n            break;\n          case 'W':\n            if (cooldownTime.timer.isReady) {\n              cooldownTime.trigger()\n              socket.emit('playerTarget', {\n                x: currentPlayer.position.x,\n                y: currentPlayer.position.y\n              });\n              socket.emit('playerAction', 'attack');\n            }\n\n            currentPlayer.action = 'attack';\n            break;\n          case 'E':\n            if (cooldownTime.timer.isReady) {\n              cooldownTime.trigger()\n              socket.emit('playerTarget', {\n                x: currentPlayer.position.x,\n                y: currentPlayer.position.y\n              });\n\n              socket.emit('playerAction', 'mining');\n            }\n            currentPlayer.action = 'mining';\n            break;\n          case 'R':\n            if (cooldownTime.timer.isReady) {\n              cooldownTime.trigger()\n              socket.emit('playerTarget', {\n                x: currentPlayer.position.x,\n                y: currentPlayer.position.y\n              });\n              socket.emit('playerAction', 'gathering');\n            }\n            currentPlayer.action = 'gathering';\n            break;\n          case 'A':\n            if (cooldownTime.timer.isReady) {\n              cooldownTime.trigger()\n              socket.emit('playerTarget', {\n                x: currentPlayer.position.x,\n                y: currentPlayer.position.y\n              });\n              socket.emit('playerAction', 'chopping');\n            }\n            currentPlayer.action = 'chopping';\n            break;\n          case 'S':\n            if (cooldownTime.timer.isReady) {\n              cooldownTime.trigger()\n              socket.emit('playerTarget', {\n                x: currentPlayer.position.x,\n                y: currentPlayer.position.y\n              });\n              socket.emit('playerAction', 'fishing');\n            }\n            currentPlayer.action = 'fishing';\n            break;\n          case 'D':\n            if (cooldownTime.timer.isReady) {\n              cooldownTime.trigger()\n              socket.emit('playerTarget', {\n                x: currentPlayer.position.x,\n                y: currentPlayer.position.y\n              });\n              socket.emit('playerAction', 'watering');\n            }\n            currentPlayer.action = 'watering';\n            break;\n          case 'F':\n            if (cooldownTime.timer.isReady) {\n              cooldownTime.trigger()\n              socket.emit('playerTarget', {\n                x: currentPlayer.position.x,\n                y: currentPlayer.position.y\n              });\n              socket.emit('playerAction', 'shoveling');\n            }\n            currentPlayer.action = 'shoveling';\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    return world;\n  });\n};\nexport default createGameControllerSystem;\n","import { defineComponent, Types } from 'bitecs'\n\nexport const Vector2 = { x: Types.f32, y: Types.f32 }\n\nexport const Actions = defineComponent({ actions: Types.ui8 })\nconst GameBarFactory = () => defineComponent({\n  position: Vector2,\n  type: Types.ui8,\n  parentRef: Types.ui8,\n  currentStats: { max: Types.f32, current: Types.f32 }\n})\n\n// Factory de componentes de Barras de juego.\nexport const ManaBar = GameBarFactory()\nexport const HealthBar = GameBarFactory()\nexport const Position = defineComponent(Vector2)\nexport const TargetPosition = defineComponent(Vector2)\nexport const Sprite = defineComponent({ texture: Types.ui8 })\nexport const Body = defineComponent({ texture: Types.ui8 })\nexport const Shoes = defineComponent({ texture: Types.ui8 })\nexport const Hair = defineComponent({ texture: Types.ui8 })\nexport const Clothes = defineComponent({ texture: Types.ui8 })\nexport const Velocity = defineComponent(Vector2)\nexport const Resource = defineComponent()\n","import { defineQuery, defineSystem, enterQuery, exitQuery } from 'bitecs';\nimport { Body, Position} from '../components/components';\n\nexport const createSpriteSystem = (scene: Phaser.Scene, textures: string[]) => {\n  // const spritesById = {}\n  const spriteQuery = defineQuery([Body]);\n  const spriteQueryEnter = enterQuery(spriteQuery);\n  const spriteQueryExit = exitQuery(spriteQuery);\n  const timeSystem = window.acropolis.timeSystem;\n  const getLocalEntityByLocalId =\n    window.acropolis.networkSystem.getLocalEntityByLocalId;\n  return defineSystem((world) => {\n    const enterEntities = spriteQueryEnter(world);\n    for (let i = 0; i < enterEntities.length; i++) {\n      const id = enterEntities[i];\n      const entity = getLocalEntityByLocalId(id);\n      entity.sprites = {};\n      entity.sprites.body = scene.add.sprite(0, 0, 'bodySpriteSheet');\n      entity.sprites.clothes = scene.add.sprite(0, 0, 'clothesSpriteSheet');\n      entity.sprites.shoes = scene.add.sprite(0, 0, 'shoesSpriteSheet');\n      entity.sprites.hair = scene.add.sprite(0, 0, 'gentlemanHairSpriteSheet');\n      // console.log('el current player',window.acropolis.currentPlayerId, entity.id, )\n    }\n\n    const entities = spriteQuery(world);\n    for (let i = 0; i < entities.length; i++) {\n      const id = entities[i];\n      const entity = getLocalEntityByLocalId(id);\n      const { body, clothes, shoes, hair } = entity.sprites;\n      if (!body) {\n        continue;\n      }\n      body.x = Position.x[id];\n      body.y = Position.y[id];\n      clothes.x = Position.x[id];\n      clothes.y = Position.y[id];\n      shoes.x = Position.x[id];\n      shoes.y = Position.y[id];\n      hair.x = Position.x[id];\n      hair.y = Position.y[id];\n      entity.position.x  = Position.x[id];\n      entity.position.y  = Position.y[id];\n      if (window.acropolis.currentPlayerId === entity.id) {\n        scene.cameras.main.startFollow(\n          entity.sprites.body,\n          false,\n          timeSystem.clientDeltaTime * timeSystem.correction,\n          timeSystem.clientDeltaTime * timeSystem.correction\n        );\n        scene.cameras.main.zoom = 1;\n        scene.cameras.main.roundPixels = true;\n      }\n    }\n\n    const exitEntities = spriteQueryExit(world);\n    for (let i = 0; i < exitEntities.length; i++) {\n      const id = exitEntities[i];\n      const entity = getLocalEntityByLocalId(id);\n      const { body, clothes, shoes , hair } = entity.sprites;\n      console.log('spriteQuery Exit');\n      if (!body) {\n        continue;\n      }\n      body.destroy();\n      clothes.destroy();\n      shoes.destroy();\n      hair.destroy();\n    }\n    return world;\n  });\n};\n","import {\n  addEntity,\n  entityExists,\n  addComponent,\n  removeEntity,\n  defineSystem\n} from 'bitecs'\nimport { Resource, Position, TargetPosition, Actions, Body, Shoes, Hair, Clothes } from '../components/components'\n\nexport const createEntitySystem = () => {\n  return defineSystem((world) => {\n    const networkEntities = window.acropolis.networkSystem.getNetworkEntities()\n    const localEntitiesIds =\n      window.acropolis.networkSystem.getNetworkEntitiesIDsByLocalID()\n    const localEntitiesByNetworkId =\n      window.acropolis.networkSystem.getLocalEntitiesIDsByNetworkID()\n\n    for (const [entityId, entity] of Object.entries < any > (networkEntities)) {\n      if (\n        localEntitiesByNetworkId?.[entityId] >= 0 &&\n        entityExists(world, localEntitiesByNetworkId[entityId])\n      ) {\n        continue\n      }\n      if (entity.type === 'player') {\n        const playerId = addEntity(world)\n        const clonedEntity = JSON.parse(JSON.stringify(entity))\n        window.acropolis.networkSystem.setLocalEntityByLocalId(\n          playerId,\n          clonedEntity\n        )\n        window.acropolis.networkSystem.setLocalEntityIDbyNetworkID(\n          entityId,\n          playerId\n        )\n        window.acropolis.networkSystem.setNetworkEntityIDbyLocalID(\n          entityId,\n          playerId\n        )\n        addComponent(world, Position, playerId)\n        addComponent(world, Body, playerId)\n        addComponent(world, Shoes, playerId)\n        addComponent(world, Hair, playerId)\n        addComponent(world, Clothes, playerId)\n        addComponent(world, TargetPosition, playerId)\n        addComponent(world, Actions, playerId)\n      }\n      if (entity.type === 'resource') {\n        const resourceId = addEntity(world)\n        const clonedEntity = JSON.parse(JSON.stringify(entity))\n        window.acropolis.networkSystem.setLocalEntityByLocalId(\n          resourceId,\n          clonedEntity\n        )\n        window.acropolis.networkSystem.setLocalEntityIDbyNetworkID(\n          entityId,\n          resourceId\n        )\n        window.acropolis.networkSystem.setNetworkEntityIDbyLocalID(\n          entityId,\n          resourceId\n        )\n        addComponent(world, Position, resourceId)\n        addComponent(world, Resource, resourceId)\n      }\n    }\n\n    for (const [localId, networkId] of Object.entries <any> (localEntitiesIds)) {\n      let exist = false\n      for (const [entityId] of Object.entries(networkEntities)) {\n        if (networkId === entityId) {\n          exist = true\n        }\n      }\n      if (!exist) {\n        removeEntity(world, Number(localId))\n      }\n    }\n    return world\n  })\n}\n","export const lerp = (start, end, amt) => {\n  return (1 - amt) * start + amt * end\n}\n\nexport const getDistance = (Vector1, Vector2) => {\n  return Math.sqrt(\n    Math.pow(Vector1.x - Vector2.x, 2) + Math.pow(Vector1.y - Vector2.y, 2)\n  )\n}\n","export const flipPlayerX = (sprites, flip = false) => {\n  for (const [key] of Object.entries(sprites)) {\n    if (key === 'body' || key === 'clothes' || key === 'shoes' || key === 'hair') {\n      sprites[key].flipX = flip\n    }\n  }\n}\n\nexport const flipPlayerY = (sprites, flip = false) => {\n  for (const [key] of Object.entries(sprites)) {\n    sprites[key].flipY = flip\n  }\n}\n","import { Position, TargetPosition } from './../components/components';\nimport { defineQuery, defineSystem } from 'bitecs';\nimport { getDistance, lerp } from '../utils/transformManager';\nimport { flipPlayerX } from './flipPlayer';\nimport { cooldownTimer } from '../utils/cooldownTimer';\n\nexport const createTargetMovementSystem = (scene: Phaser.Scene, socket) => {\n  const movementQuery = defineQuery([TargetPosition, Position]);\n  const activePointer = scene.input.activePointer;\n  const cooldownTime = cooldownTimer(100);\n  // console.log('madres', window.acropolis.timeSystem.clientDeltaTimeNoFR)\n  // let animation = null;\n  return defineSystem((world) => {\n  cooldownTime.timeCounter(window.acropolis.timeSystem.clientDeltaTimeNoFR)\n  // console.log('targetMovement', cooldownTime.timer.currentTime)\n  // console.log('targetMovement', cooldownTime.timer.isReady)\n    const clientDeltaTime = window.acropolis.timeSystem.clientDeltaTime;\n    const entities = movementQuery(world);\n    for (let i = 0; i < entities.length; i++) {\n      const id = entities[i];\n      const entity =\n        window.acropolis.networkSystem.getNetworkEntityByLocalId(id);\n      if (!entity || window?.acropolis?.inventory?.inventoryOpen) {\n        continue;\n      }\n\n      Position.x[id] = lerp(Position.x[id], entity.position.x, clientDeltaTime);\n      Position.y[id] = lerp(Position.y[id], entity.position.y, clientDeltaTime);\n      const localEntity =\n        window.acropolis.networkSystem.getLocalEntityByLocalId(id);\n\n      if (!localEntity?.sprites?.body) {\n        continue;\n      }\n\n      // !TODO move to animation system\n      const distance = getDistance(localEntity.sprites.body, entity.target);\n      if (\n        localEntity.action !== 'running' &&\n        distance > 1\n      ) {\n        localEntity.action = 'running'\n      }\n      if (\n        localEntity.action !== 'idle' &&\n        distance < 1\n      ) {\n        localEntity.action = 'idle'\n      }\n      if (localEntity.sprites.body.x < entity.target.x) {\n        flipPlayerX(localEntity.sprites);\n      } else {\n        flipPlayerX(localEntity.sprites, true);\n      }\n      if (\n        activePointer.leftButtonDown() &&\n        !activePointer.leftButtonReleased() &&\n        cooldownTime.timer.isReady\n      ) {\n        cooldownTime.trigger()\n        if (localEntity.sprites.body.x < activePointer.worldX) {\n          flipPlayerX(localEntity.sprites);\n        } else {\n          flipPlayerX(localEntity.sprites, true);\n        }\n        if(activePointer.y > 550 && activePointer.x > 550){\n          return\n        }\n        socket.emit('playerTarget', {\n          x: Math.round(activePointer.worldX),\n          y: Math.round(activePointer.worldY)\n        });\n\n      }\n    }\n    return world;\n  });\n};\n","import {\n  defineSystem\n} from 'bitecs'\n\nexport const createTimeSystem = () => {\n  window.acropolis.timeSystem = {}\n  const timeSystem = window.acropolis.timeSystem\n  // window.acropolis.timeSystem.frameRate = 1000/60\n  timeSystem.frameRate = 1000 / 60\n  timeSystem.clientDeltaTime = 1\n  timeSystem.clientLastUpdate = Date.now()\n  timeSystem.clientLastDeltaTime = 1\n  timeSystem.clientDeltaTimeNoFR = 0\n  return defineSystem(world => {\n    const clientNow = Date.now()\n    timeSystem.clientDeltaTimeNoFR = (clientNow - timeSystem.clientLastUpdate)\n    timeSystem.clientDeltaTime = (clientNow - timeSystem.clientLastUpdate) / timeSystem.frameRate\n    timeSystem.clientLastUpdate = clientNow\n    timeSystem.correction = timeSystem.clientDeltaTime / timeSystem.clientLastDeltaTime\n    timeSystem.clientLastDeltaTime = timeSystem.clientDeltaTime\n    return world\n  })\n}\n","const playerPlayAnimation = (scene, animationKey, playerInstance) => {\n\n  switch (animationKey) {\n    case 'running':\n\n      playerInstance.sprites.body.play({ key: 'running' })\n      playerInstance.sprites.shoes.play({ \n        key:'runningShoes'\n      })   \n      playerInstance.sprites.hair.play({\n        key: 'runningHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'runningClothes'\n      })\n      break\n    case 'idle':\n      playerInstance.sprites.body.play({ key: 'idle' })\n      playerInstance.sprites.shoes.play({ \n        key: 'idleShoes' \n      })     \n      playerInstance.sprites.hair.play({\n        key: 'idleHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'idleClothes'\n      })\n      break\n    case 'attack':\n      playerInstance.sprites.body.play({ key: 'attack' })\n      playerInstance.sprites.shoes.play({\n        key: 'attackShoes'\n      })\n      playerInstance.sprites.hair.play({\n        key: 'attackHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'attackClothes'\n      })\n      break\n    case 'mining':\n      playerInstance.sprites.body.play({ key: 'mining' })\n      playerInstance.sprites.shoes.play({\n        key: 'miningShoes'\n      })\n      playerInstance.sprites.hair.play({\n        key: 'miningHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'miningClothes'\n      })\n      break\n    case 'gathering':\n      playerInstance.sprites.body.play({ key: 'gathering' })\n      playerInstance.sprites.shoes.play({\n        key: 'gatheringShoes'\n      })\n      playerInstance.sprites.hair.play({\n        key: 'gatheringHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'gatheringClothes'\n      })\n      break\n    case 'chopping':\n      playerInstance.sprites.body.play({ key: 'chopping' })\n      playerInstance.sprites.shoes.play({\n        key: 'choppingShoes'\n      })\n      playerInstance.sprites.hair.play({\n        key: 'choppingHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'choppingClothes'\n      })\n      break\n    case 'fishing':\n      playerInstance.sprites.body.play({ key: 'fishing' })\n      playerInstance.sprites.shoes.play({\n        key: 'fishingShoes'\n      })\n      playerInstance.sprites.hair.play({\n        key: 'fishingHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'fishingClothes'\n      })\n      break\n    case 'watering':\n      playerInstance.sprites.body.play({ key: 'watering' })\n      playerInstance.sprites.shoes.play({\n        key: 'wateringShoes'\n      })\n      playerInstance.sprites.hair.play({\n        key: 'wateringHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'wateringClothes'\n      })\n      break\n    case 'shoveling':\n      playerInstance.sprites.body.play({ key: 'shoveling' })\n      playerInstance.sprites.shoes.play({\n        key: 'shovelingShoes'\n      })\n      playerInstance.sprites.hair.play({\n        key: 'shovelingHair'\n      })\n      playerInstance.sprites.clothes.play({\n        key: 'shovelingClothes'\n      })\n      break\n\n    default:\n      break\n  }\n}\n\nexport default playerPlayAnimation\n","import { defineSystem } from 'bitecs';\nimport playerPlayAnimation from './playerPlayAnimations';\n\nconst createAnimationSystem = (scene: Phaser.Scene) => {\n  const lastAnimation = []\n  return defineSystem((world) => {\n    // const currentPlayer =\n    //   window.acropolis.networkSystem.getLocalEntityByNetworkId(\n    //     window.acropolis.currentPlayerId\n    //   );\n    // if (lastAnimation !== currentPlayer.action) {\n    //   lastAnimation = currentPlayer.action;\n    //   playerPlayAnimation(scene, currentPlayer.action, currentPlayer);\n    // }\n\n    const allPlayers = window.acropolis.networkSystem.getNetworkEntities()\n    for (const [entityId, entity] of Object.entries<any>(allPlayers)) {\n      if (entity.type === 'player' && lastAnimation[entityId] !== entity.action) {\n        // console.log('entityId', entityId, 'entity actuio', entity.action)\n        lastAnimation[entityId] = entity.action;\n        playerPlayAnimation(scene, entity.action, window.acropolis.networkSystem.getLocalEntityByNetworkId(entityId));\n      }\n    }\n    return world;\n  });\n};\nexport default createAnimationSystem;\n","import { defineQuery, defineSystem, enterQuery, exitQuery } from 'bitecs';\nimport { Resource, Position } from '../components/components';\n\nexport const createResourceSpriteSystem = (scene: Phaser.Scene) => {\n  // const spritesById = {}\n  const resourceQuery = defineQuery([Resource]);\n  const resourceQueryEnter = enterQuery(resourceQuery);\n  const resourceQueryExit = exitQuery(resourceQuery);\n  const timeSystem = window.acropolis.timeSystem;\n  const getLocalEntityByLocalId =\n    window.acropolis.networkSystem.getLocalEntityByLocalId;\n  return defineSystem((world) => {\n    const enterEntities = resourceQueryEnter(world);\n    for (let i = 0; i < enterEntities.length; i++) {\n      const id = enterEntities[i];\n      const entity = getLocalEntityByLocalId(id);\n      // console.log('entity', entity)\n      entity.sprites = {};\n      if (entity.category === 'tree') {\n        entity.sprites.body = scene.add.sprite(entity.position.x, entity.position.y -15, 'trees');\n        entity.sprites.body.setScale(2)\n      }\n\n      if (entity.category === 'herb') {\n        console.log('pintalamadre')\n        entity.sprites.body = scene.add.sprite(entity.position.x, entity.position.y - 5, 'globalNature');\n        entity.sprites.body.setFrame(60)\n        entity.sprites.body.setScale(2)\n      }\n      if (entity.category === 'stone') {\n        console.log('pintalamadre')\n        entity.sprites.body = scene.add.sprite(entity.position.x, entity.position.y + 5, 'TXprops');\n        entity.sprites.body.setFrame(245)\n      }\n\n\n      // !Important To set multiple resources you can select a frame and change widh and height or without for default\n      // if(id === 0) {\n      //   entity.sprites.body.setFrame(2, widht, height)\n       //   entity.sprites.body.setFrame(2, widht, height)\n      // }\n    }\n\n    const entities = resourceQuery(world);\n    for (let i = 0; i < entities.length; i++) {\n      const id = entities[i];\n      const entity = getLocalEntityByLocalId(id);\n      const { body } = entity.sprites;\n      if (!body) {\n        continue;\n      }\n      if (entity.category === 'tree') {\n        body.x = entity.position.x\n        body.y = entity.position.y -15\n      }\n      if (entity.category === 'herb') {\n        body.x = entity.position.x\n        body.y = entity.position.y \n      }\n    }\n\n    const exitEntities = resourceQueryExit(world);\n    for (let i = 0; i < exitEntities.length; i++) {\n      const id = exitEntities[i];\n      const entity = getLocalEntityByLocalId(id);\n      const { body, clothes, shoes } = entity.sprites;\n      console.log('resourceQuery Exit');\n      if (!body) {\n        continue;\n      }\n      body.destroy();\n    }\n    return world;\n  });\n};\n","import { defineQuery, defineSystem, enterQuery, exitQuery } from 'bitecs';\nimport { Body, Position} from '../components/components';\nimport Phaser from 'phaser';\nexport const createHealthBarSystem = (scene: Phaser.Scene) => {\n  // const spritesById = {}\n  const spriteQuery = defineQuery([Body]);\n  const spriteQueryEnter = enterQuery(spriteQuery);\n  const spriteQueryExit = exitQuery(spriteQuery);\n  const timeSystem = window.acropolis.timeSystem;\n  const getLocalEntityByLocalId =\n    window.acropolis.networkSystem.getLocalEntityByLocalId;\n  return defineSystem((world) => {\n    const enterEntities = spriteQueryEnter(world);\n    for (let i = 0; i < enterEntities.length; i++) {\n      const id = enterEntities[i];\n      const entity = getLocalEntityByLocalId(id);\n      entity.sprites.healthBarDecoration = scene.add.sprite(50, 15, 'healthBarDecoration');\n      entity.sprites.healthBarDecoration.setScrollFactor(0, 0)\n      entity.sprites.healthBar = scene.add.sprite(57, 15, 'healthBar')\n      entity.sprites.healthBar.setScrollFactor(0, 0)\n      \n    }\n    const entities = spriteQuery(world)\n    for (let i = 0; i < entities.length; i++) {\n      const id = entities[i];\n      const entity = getLocalEntityByLocalId(id);\n      const networkEntity = window.acropolis.networkSystem.getNetworkEntityByLocalId(id)\n      if(networkEntity.healthPoints < 100) {\n        // console.log('orale perro', entity.healthPoints)\n        const multiplier = networkEntity.healthPoints/100\n        entity.healthPoints = networkEntity.healthPoints\n        entity.sprites.healthBar.setCrop(0, 0, 50 * multiplier, 10)\n      }\n    }\n \n\n    const exitEntities = spriteQueryExit(world);\n    for (let i = 0; i < exitEntities.length; i++) {\n      const id = exitEntities[i];\n      const entity = getLocalEntityByLocalId(id);\n      const { healthBar, healthBarDecoration } = entity.sprites;\n      if (!healthBar) {\n        continue;\n      }\n      healthBar.destroy();\n      healthBarDecoration.destroy();\n    }\n    return world;\n  });\n};\n","import { defineQuery, defineSystem, enterQuery, exitQuery } from 'bitecs';\nimport { Body, Position } from '../components/components';\nimport _ from 'lodash';\n\nexport const createItemsSystem = (scene: Phaser.Scene) => {\n  // const spritesById = {}\n  const spriteQuery = defineQuery([Body]);\n  const spriteQueryEnter = enterQuery(spriteQuery);\n  const spriteQueryExit = exitQuery(spriteQuery);\n  const timeSystem = window.acropolis.timeSystem;\n  const getLocalEntityByLocalId =\n    window.acropolis.networkSystem.getLocalEntityByLocalId;\n  let initBackpack = false;\n  let x = 288;\n  let y = 416;\n  let counter = 1;\n  const inventoryLayout = [];\n  let layoutX = 288;\n  let layoutY = 416;\n  let inventoryId = 1;\n  let entity;\n  let networkEntity;\n\n  const generateInventoryLayout = () => {\n    for (let y = 0; y < 4; y++) {\n      layoutX = 288;\n      for (let x = 0; x < 8; x++) {\n        inventoryLayout.push({\n          id: inventoryId,\n          position: { x: layoutX, y: layoutY },\n          itemId: ''\n        });\n        layoutX += 32;\n        inventoryId++;\n      }\n      layoutY += 32;\n    }\n  };\n\n  const makeItemDraggable = (key, entity) => {\n    entity.sprites.items[key].sprite.setInteractive();\n    entity.sprites.items[key].sprite.setData({ id: key });\n    entity.sprites.items[key].sprite.setScrollFactor(0, 0);\n    entity.sprites.items[key].qty.setData({ id: key });\n    entity.sprites.items[key].qty.setInteractive({\n      draggable: true,\n      // SETUP hitarea\n      hitArea: new Phaser.Geom.Rectangle(-16, -16, 32, 32),\n      //Check hitarea\n      hitAreaCallback: function (hitArea, x, y) {\n        return Phaser.Geom.Rectangle.Contains(hitArea, x, y);\n      }\n    });\n    entity.sprites.items[key].qty.setScrollFactor(0, 0);\n    scene.input.setDraggable(entity.sprites.items[key].sprite);\n  };\n\n  const updateLayoutCounter = () => {\n    x += 32;\n    counter++;\n    if (counter > 8) {\n      y += 32;\n      x = 288;\n    }\n  };\n\n  const updateInventoryLayoutItem = (key, item) => {\n    inventoryLayout.forEach((inventoryItem) => {\n      if (\n        inventoryItem.position.x === item.sprite.x &&\n        inventoryItem.position.y === item.sprite.y\n      ) {\n        inventoryItem.itemId = key;\n      }\n    });\n  };\n\n  const setItemImage = (key, entity) => {\n    switch (key) {\n      case 'basicWood':\n        entity.sprites.items[key].sprite.setFrame(16 * 60 - 2);\n        break;\n      case 'basicStone':\n        entity.sprites.items[key].sprite.setFrame(16 * 54 - 5);\n        break;\n      case 'basicHerb':\n        entity.sprites.items[key].sprite.setFrame(16 * 18);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const manageDnDInventory = () => {\n    scene.input.on('drag', function (pointer, gameObject, dragX, dragY) {\n      if (dragX >= 288 && dragX <= 512 && dragY >= 416 && dragY <= 512) {\n        gameObject.x = Phaser.Math.Snap.To(dragX, 32);\n        gameObject.y = Phaser.Math.Snap.To(dragY, 32);\n        inventoryLayout.forEach((inventoryItem) => {\n          if (\n            inventoryItem.position.y === gameObject.y &&\n            inventoryItem.position.x === gameObject.x &&\n            inventoryItem.itemId // y tiene item\n          ) {\n            const currentItemInventory = inventoryLayout.find(\n              (invItem) => invItem.itemId === gameObject.getData('id')\n            );\n            if (currentItemInventory) {\n              const itemId = currentItemInventory.itemId;\n              const itemToUpdate = entity.sprites.items[inventoryItem.itemId];\n              itemToUpdate.sprite.x = currentItemInventory.position.x;\n              itemToUpdate.sprite.y = currentItemInventory.position.y;\n              itemToUpdate.qty.x = currentItemInventory.position.x;\n              itemToUpdate.qty.y = currentItemInventory.position.y;\n              currentItemInventory.itemId = inventoryItem.itemId;\n              inventoryItem.itemId = itemId;\n            }\n          } else if (\n            inventoryItem.position.y === gameObject.y &&\n            inventoryItem.position.x === gameObject.x\n          ) {\n            const currentItemInventory = inventoryLayout.find(\n              (invItem) => invItem.itemId === gameObject.getData('id')\n            );\n            inventoryItem.itemId = gameObject.getData('id');\n            currentItemInventory.itemId = '';\n            // console.log('Inventory Layout',inventoryLayout)\n          }\n        });\n      }\n    });\n  };\n\n  const createBackPackInventory = (entity) => {\n    entity.sprites.inventory = scene.add.sprite(400, 370, 'inventory');\n    entity.sprites.backpack = scene.add.sprite(575, 575, 'backpack');\n    scene.input.topOnly = false;\n    entity.sprites.backpack.setScrollFactor(0, 0);\n    entity.sprites.backpack.setInteractive();\n    window.acropolis.inventory = {};\n    window.acropolis.inventory.inventoryOpen = true;\n    entity.sprites.inventory.setScrollFactor(0, 0);\n    entity.sprites.inventory.setInteractive();\n    entity.sprites.inventory.setScale(2);\n    entity.sprites.backpack.setName('backpack');\n  };\n\n  const openCloseBackpackInventory = () => {\n    scene.input.on(\n      'pointerdown',\n      (\n        pointer: Phaser.Input.Pointer,\n        objectsClicked: Phaser.GameObjects.GameObject[]\n      ) => {\n        if (objectsClicked?.[0]?.name === 'backpack') {\n          window.acropolis.inventory.inventoryOpen =\n            !window.acropolis.inventory.inventoryOpen;\n\n          if (entity?.sprites?.items) {\n            for (const [, item] of Object.entries<any>(entity.sprites.items)) {\n              item.sprite.setVisible(!item.sprite.visible);\n              item.qty.setVisible(!item.qty.visible);\n            }\n          }\n          entity.sprites.inventory.setVisible(\n            !entity.sprites.inventory.visible\n          );\n        }\n      }\n    );\n  };\n\n  return defineSystem((world) => {\n    if (!window?.acropolis?.currentPlayerId) {\n      return;\n    }\n    /// intentando hacer el ciclo de refrescamiento\n    entity = window.acropolis.networkSystem.getLocalEntityByNetworkId(\n      window.acropolis.currentPlayerId\n    );\n    networkEntity = window.acropolis.networkSystem.getNetworkEntityByNetworkID(\n      window.acropolis.currentPlayerId\n    );\n    // Refresh items if doesn't have items.\n    if(entity?.items === null){\n      entity.items = networkEntity.items\n    }\n    if (initBackpack) {\n      if (networkEntity?.items) {\n        if (entity?.items) {\n          // Layout 16x64\n          for (const [key, networkItem] of Object.entries<any>(\n            networkEntity.items\n          )) {\n            if (entity.sprites.items[key]) {\n              //actualizar el texto de cantidad de items\n              entity.sprites.items[key].qty.setText(networkItem.quantity);\n              continue;\n            }\n            const item = {\n              sprite: scene.add.sprite(x, y, 'icons'),\n              qty: scene.add.text(x, y, networkItem.quantity)\n            };\n            entity.sprites.items[key] = item;\n\n            const visibility = window.acropolis.inventory.inventoryOpen;\n            item.sprite.setVisible(visibility);\n            item.qty.setVisible(visibility);\n\n            updateInventoryLayoutItem(key, item);\n            setItemImage(key, entity);\n            makeItemDraggable(key, entity);\n            updateLayoutCounter();\n          }\n        }\n      }\n    }\n    // qeui termina el intento\n    if (initBackpack) {\n      return;\n    }\n\n    if (!entity?.sprites) {\n      return;\n    }\n    initBackpack = true;\n    createBackPackInventory(entity);\n    generateInventoryLayout();\n    entity.sprites.items = {};\n    if (networkEntity?.items) {\n      //estop ver donde va\n      if (entity?.items) {\n        // Layout 16x64\n        for (const [key, networkItem] of Object.entries<any>(\n          networkEntity.items\n        )) {\n          if (entity.sprites.items[key]) {\n            continue;\n          }\n          const item = {\n            sprite: scene.add.sprite(x, y, 'icons'),\n            qty: scene.add.text(x, y, networkItem.quantity)\n          };\n          entity.sprites.items[key] = item;\n          updateInventoryLayoutItem(key, item);\n          setItemImage(key, entity);\n          makeItemDraggable(key, entity);\n          updateLayoutCounter();\n        }\n      }\n    }\n    manageDnDInventory();\n    openCloseBackpackInventory();\n\n    // TODO actualizar los estupidos valores numericos de la base de datos porque claro que si!\n    // TODO revidsar porque se rompe el sistema de ordenamiento de items.\n\n    // if (entity?.sprites) {\n    //   networkEntity =\n    //     window.acropolis.networkSystem.getNetworkEntityByNetworkID(\n    //       window.acropolis.currentPlayerId\n    //     );\n\n    //     if(!networkEntity?.items) {\n    //       return\n    //     }\n    //     entity.sprites.items = {};\n    //   // Layout 16x64\n    //   for (const [key, networkItem] of Object.entries<any>(\n    //     networkEntity.items\n    //   )) {\n    //     // console.log(networkItem);\n    //     if (!entity.sprites.items[key]) {\n    //       const item = {\n    //         sprite: scene.add.sprite(x, y, 'icons'),\n    //         qty: scene.add.text(x, y, networkItem.quantity)\n    //       };\n    //       item.sprite.setVisible(!item.sprite.visible);\n    //       item.qty.setVisible(!item.qty.visible);\n    //       entity.sprites.items[key] = item;\n    //       switch (key) {\n    //         case 'basicWood':\n    //           entity.sprites.items[key].sprite.setFrame(16 * 60 - 2);\n    //           break;\n    //         case 'basicStone':\n    //           entity.sprites.items[key].sprite.setFrame(16 * 54 - 5);\n    //           break;\n    //         case 'basicHerb':\n    //           entity.sprites.items[key].sprite.setFrame(16 * 18);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //       scene.input.topOnly = false;\n    //       entity.sprites.items[key].sprite.setInteractive();\n    //       entity.sprites.items[key].sprite.setData({ id: key });\n    //       entity.sprites.items[key].sprite.setScrollFactor(0, 0);\n    //       entity.sprites.items[key].qty.setData({ id: key });\n    //       entity.sprites.items[key].qty.setInteractive({\n    //         draggable: true,\n    //         // SETUP hitarea\n    //         hitArea: new Phaser.Geom.Rectangle(-16, -16, 32, 32),\n    //         //Check hitarea\n    //         hitAreaCallback: function (hitArea, x, y) {\n    //           return Phaser.Geom.Rectangle.Contains(hitArea, x, y);\n    //         }\n    //       });\n    //       entity.sprites.items[key].qty.setScrollFactor(0, 0);\n    //       scene.input.setDraggable(entity.sprites.items[key].sprite);\n    //       x += 32;\n    //       counter++;\n    //       if (counter > 8) {\n    //         y += 32;\n    //         x = 288;\n    //       }\n    //     }\n    //   }\n    // }\n\n    // if (window.acropolis.currentPlayerId) {\n    //   const currentPlayer =\n    //     window.acropolis.networkSystem.getLocalEntityByNetworkId(\n    //       window.acropolis.currentPlayerId\n    //     );\n    //   const networkEntity =\n    //     window.acropolis.networkSystem.getNetworkEntityByNetworkID(\n    //       window.acropolis.currentPlayerId\n    //     );\n    //   if (currentPlayer) {\n    //     if (networkEntity.items) {\n    //       // Layout 16x64\n    //       // console.log('currentPlayer', networkEntity.items)\n    //       let x = 288;\n    //       let y = 416;\n    //       let counter = 1;\n    //       for (const [key, item] of Object.entries<any>(networkEntity.items)) {\n    //         if (!currentPlayer.sprites.items[key]) {\n    //           currentPlayer.sprites.items[key] = scene.add.sprite(\n    //             x,\n    //             y,\n    //             'icons'\n    //           );\n\n    //           currentPlayer.sprites.items[key].setVisible(false);\n    //           // currentPlayer.sprites.items[key].text = scene.add.text(288, 416, item);\n    //           //wood\n    //           switch (key) {\n    //             case 'basicWood':\n    //               currentPlayer.sprites.items[key].setFrame(16 * 60 - 2);\n    //               break;\n    //             case 'basicStone':\n    //               currentPlayer.sprites.items[key].setFrame(16 * 54 - 5);\n    //               break;\n    //             case 'basicHerb':\n    //               currentPlayer.sprites.items[key].setFrame(16 * 18);\n    //               break;\n    //             default:\n    //               break;\n    //           }\n    //           //stone\n    //           //herb\n    //           currentPlayer.sprites.items[key].setInteractive();\n    //           currentPlayer.sprites.items[key].setScrollFactor(0, 0);\n    //           scene.input.setDraggable(currentPlayer.sprites.items[key]);\n    //         }\n\n    //         x += 32;\n    //         counter++;\n    //         if (counter > 8) {\n    //           y += 32;\n    //           x = 288;\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n\n    // const exitEntities = spriteQueryExit(world);\n    // for (let i = 0; i < exitEntities.length; i++) {\n    //   const id = exitEntities[i];\n    //   const entity = getLocalEntityByLocalId(id);\n    //   const { wood, stone, herb } = entity.text;\n    //   if (!wood) {\n    //     continue;\n    //   }\n    //   wood.destroy();\n    //   stone.destroy();\n    //   herb.destroy();\n    // }\n    return world;\n  });\n};\n","import { defineQuery, defineSystem } from 'bitecs';\n\nexport const createSkillsSystem = (scene) => {\n  return defineSystem((world) => {\n    const networkEntities = window.acropolis.networkSystem.getNetworkEntities();\n    for (const [entityId, entity] of Object.entries<any>(networkEntities)) {\n      const localEntity =\n        window.acropolis.networkSystem.getLocalEntityByNetworkId(entityId);\n      if (entity?.skillPosition) {\n        if (!localEntity?.skill) {\n          console.log('crea el puto skill');\n          localEntity.skill = {};\n          localEntity.sprites.skill = scene.add.sprite(entity.skillPosition.x, entity.skillPosition.y, 'balla')\n        }\n      } \n      else if (localEntity?.skill) {\n        console.log('destroye el puto skill');\n        localEntity.sprites.skill.destroy()\n        localEntity.skill = null;\n      }\n    }\n    return world;\n  });\n};\n","import Phaser from 'phaser';\nimport loadingBar from '../systems/loadingBar';\nimport {\n  loadImage,\n  loadTilemapTiledJSON,\n  loadSpritesheet\n} from '../phaserHelper/loaders';\nimport { FRAME_SIZE_32_32, FRAME_SIZE_96_96, FRAME_SIZE_16_16, FRAME_SIZE_64_64 } from '../constants/constants';\nimport animatedPlayer from '../systems/playerSpritesheetAnimations';\nimport createGameControllerSystem from '../systems/createGameControllerSystem';\nimport { createWorld } from 'bitecs';\n\nimport { createSpriteSystem } from '../systems/createSpriteSystem';\nimport { createEntitySystem } from '../systems/createEntitySystem';\nimport { createTargetMovementSystem } from './../systems/createTargetMovementSystem';\nimport { createTimeSystem } from '../systems/createTimeSystem';\nimport createAnimationSystem from '../systems/createAnimationSystem';\nimport { createResourceSpriteSystem } from '../systems/createResourceSpriteSystem';\nimport { createHealthBarSystem } from '../systems/createHealthBarSystem';\nimport { createItemsSystem } from '../systems/createItemsSystem';\nimport { createSkillsSystem } from '../systems/createSkillsSystem';\n\ndeclare global {\n  interface Window {\n    acropolis: any;\n  }\n}\nexport default class Game extends Phaser.Scene {\n  private world;\n  private lobbyScene;\n  private spriteSystem;\n  private entitySystem;\n  private targetMovementSystem;\n  private timeSystem;\n  private gameControllerSystem;\n  private animationSystem;\n  private resourceSpriteSystem;\n  private healthBarSystem;\n  private itemsSystem;\n  private skillsSystem\n\n  init(data) {\n    this.lobbyScene = {};\n    this.lobbyScene.socket = data.socket;\n  }\n  preload() {\n    //This is the place where you load all assets.\n    loadingBar(this);\n    loadImage(this, 'ball', '/game/sprites/spikedballa.png');\n    loadImage(this, 'atlas', '/game/tiled/atlas.png');\n    loadTilemapTiledJSON(this, 'forestkey', '/game/tiled/forest1.json');\n    loadSpritesheet(\n      this,\n      'bodySpriteSheet',\n      '/game/character/characters/char_all.png',\n      FRAME_SIZE_32_32\n    );\n    loadSpritesheet(\n      this,\n      'shoesSpriteSheet',\n      '/game/character/clothes/shoes.png',\n      FRAME_SIZE_32_32\n    );\n    //'buzzcut.png',hitler\n    //'curly.png',afro\n    //'french_curl.png',señora\n    //'gentleman.png', joven\n    //'midiwave.png', greñuda\n    //'ponytail.png', chopo de hershey\n    //'spacebuns.png',sailor moon\n    loadSpritesheet(\n      this,\n      'gentlemanHairSpriteSheet',\n      '/game/character/hair/gentleman.png',\n      FRAME_SIZE_32_32\n    );\n    loadSpritesheet(\n      this,\n      'clothesSpriteSheet',\n      '/game/character/clothes/basic.png',\n      FRAME_SIZE_32_32\n    );\n    loadSpritesheet(\n      this,\n      'balla',\n      '/game/sprites/spikedballa.png',\n      FRAME_SIZE_96_96\n    );\n    loadSpritesheet(\n      this,\n      'trees',\n      '/game/nature/global.png',\n      FRAME_SIZE_32_32\n    );\n    loadSpritesheet(\n      this,\n      'globalNature',\n      '/game/nature/global.png',\n      FRAME_SIZE_16_16\n    );\n    loadSpritesheet(\n      this,\n      'TXprops',\n      '/game/rpg-pack/Texture/TXProps.png',\n      FRAME_SIZE_32_32\n    );\n    loadSpritesheet(\n      this,\n      'healthBarDecoration',\n      '/game/statusbar/health_bar_decoration.png',\n      {\n        frameWidth: 64,\n        frameHeight: 17\n      }\n    );\n    loadSpritesheet(\n      this,\n      'healthBar',\n      '/game/statusbar/health_bar.png',\n      {\n        frameWidth: 49,\n        frameHeight: 17\n      }\n    );\n    loadSpritesheet(\n      this,\n      'backpack',\n      '/game/rpg-pack/UI/backpack.png',\n      FRAME_SIZE_32_32\n    );\n    loadSpritesheet(\n      this,\n      'backpack',\n      '/game/rpg-pack/UI/backpack.png',\n      FRAME_SIZE_32_32\n    );\n    loadSpritesheet(\n      this,\n      'inventory',\n      '/game/rpg-pack/UI/inventory.png',\n      {\n        frameWidth: 192,\n        frameHeight: 192\n      }\n    );\n    loadSpritesheet(\n      this,\n      'icons',\n      '/game/icons/icons_full_32.png',\n      FRAME_SIZE_32_32\n    );\n  }\n  create() {\n    this.world = createWorld();\n    this.timeSystem = createTimeSystem();\n    this.entitySystem = createEntitySystem();\n    this.itemsSystem = createItemsSystem(this) \n    this.gameControllerSystem = createGameControllerSystem(\n      this,\n      this.lobbyScene.socket\n    );\n    this.spriteSystem = createSpriteSystem(this, [\n      'bodySpriteSheet',\n      'clothesSpriteSheet',\n      'shoesSpriteSheet'\n    ]);\n    this.skillsSystem = createSkillsSystem(this)\n    this.healthBarSystem = createHealthBarSystem(this)\n    this.animationSystem = createAnimationSystem(this);\n    this.targetMovementSystem = createTargetMovementSystem(\n      this,\n      this.lobbyScene.socket\n    );\n    this.resourceSpriteSystem = createResourceSpriteSystem(this)\n\n    //Build Map\n    const map = this.make.tilemap({\n      key: 'forestkey',\n      tileWidth: 16,\n      tileHeight: 16\n    });\n    const tileset = map.addTilesetImage('atlas', 'atlas');\n    map.createLayer('piso', tileset, 0, 0);\n    map.createLayer('caminos', tileset, 0, 0);\n    map.createLayer('plantas', tileset, 0, 0);\n    map.createLayer('construcciones', tileset, 0, 0);\n    // Crete player Animations\n    animatedPlayer(this);\n\n    //Restrict camera maximum movement\n    this.cameras.main.setBounds(0, 0, 1000, 1000);\n\n    //Disable right click context menu\n    this.input.mouse.disableContextMenu();\n\n    setInterval(() => {\n      if (\n        !this.world ||\n        !this.spriteSystem ||\n        !this.entitySystem ||\n        !this.targetMovementSystem ||\n        !this.timeSystem\n      ) {\n        // console.log('entra aca', !this.world || !this.spriteSystem || this.playerSystem || this.targetMovementSystem)\n        return;\n      }\n      this.itemsSystem(this.world)\n      this.timeSystem(this.world);\n      this.entitySystem(this.world);\n      this.spriteSystem(this.world);\n      this.healthBarSystem(this.world)\n      this.resourceSpriteSystem(this.world)\n      this.skillsSystem(this.world)\n\n      this.targetMovementSystem(this.world);\n      this.gameControllerSystem(this.world);\n      this.animationSystem(this.world);\n\n    }, window.acropolis.timeSystem.frameRate);\n  }\n}\n","\n/* eslint-disable */\nexport const networkUpdateStateSystem = (socket) => {\n  const networkEntitiesIDsByLocalID = {}\n  const localEntitiesIDsByNetworkID = {}\n  const localEntities = {};\n\n  // This is only read\n  let networkEntities = {};\n\n  socket.on('broadcastNetworkClient', (data) => {\n    networkEntities = data;\n    // console.log('nwetworkentites', networkEntities)\n  });\n\n  const deleteNetworkEntityIDByLocalID = (id) => {\n    delete networkEntitiesIDsByLocalID[id]\n  }\n  const deleteLocalEntityIDByNetworkID = (id) => {\n    delete localEntitiesIDsByNetworkID[id]\n  }\n  const deleteLocalEntity = (id) => {\n    delete localEntities[id]\n  }\n  const setLocalEntityIDbyNetworkID = (networkId, localId) => {\n    localEntitiesIDsByNetworkID[networkId] = localId\n  }\n\n  const getNetworkEntityByNetworkID = (networkId) => {\n    return networkEntities[networkId]\n  }\n\n  const getLocalEntityIDbyNetworkID = (networkId) => {\n    return localEntitiesIDsByNetworkID[networkId]\n  }\n\n  const getNetworkEntitiesIDsByLocalID = () => {\n    return networkEntitiesIDsByLocalID\n  }\n\n  const getLocalEntitiesIDsByNetworkID = () => {\n    return localEntitiesIDsByNetworkID\n  }\n\n  const setLocalEntityByLocalId = (id, entity) => {\n    localEntities[id] = entity\n  }\n  const getLocalEntityByLocalId = (id) => {\n    const localEntity =  localEntities[id]\n    return localEntity\n  }\n\n  const getLocalEntityByNetworkId = (id) => {\n    // console.log('localEntities', localEntities)\n    const localEntity =  localEntities[getLocalEntityIDbyNetworkID(id)]\n    return localEntity\n  }\n\n\n  const getNetworkEntities = () => {\n    return networkEntities;\n  };\n\n  const getLocalEntities = () => {\n    return localEntities;\n  };\n\n  const setNetworkEntityIDbyLocalID = (networkId, localId) => {\n    networkEntitiesIDsByLocalID[localId] = networkId\n  }\n\n  const getNetworkEntityIDbyLocalID = (localId) => {\n    return networkEntitiesIDsByLocalID[localId]\n  }\n  const getNetworkEntityByLocalId = (id) => {\n    const networkEntity =  networkEntities[getNetworkEntityIDbyLocalID(id)]\n    return networkEntity\n  }\n\n  return {\n    deleteNetworkEntityIDByLocalID,\n    deleteLocalEntityIDByNetworkID,\n    deleteLocalEntity,\n\n    getLocalEntitiesIDsByNetworkID,\n    getNetworkEntitiesIDsByLocalID,\n\n    // Server values must be only readable.\n    getNetworkEntities,\n    getNetworkEntityByLocalId,\n    getNetworkEntityByNetworkID,\n\n    // Local values can be written\n    getLocalEntities,\n    getLocalEntityByLocalId,\n    getLocalEntityByNetworkId,\n    setLocalEntityByLocalId,\n\n    // The glue between server and client.\n    setNetworkEntityIDbyLocalID,\n    getNetworkEntityIDbyLocalID,\n    getLocalEntityIDbyNetworkID,\n    setLocalEntityIDbyNetworkID,\n\n  };\n};\n","import { render } from \"./AcropolisMain.vue?vue&type=template&id=5742f027&scoped=true\"\nimport script from \"./AcropolisMain.vue?vue&type=script&lang=js\"\nexport * from \"./AcropolisMain.vue?vue&type=script&lang=js\"\n\nimport \"./AcropolisMain.vue?vue&type=style&index=0&id=5742f027&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Proyectos\\\\acropolisgame\\\\acropolis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5742f027\"]])\n\nexport default __exports__","\nimport { Options, Vue } from 'vue-class-component';\nimport AcropolisMain from '../components/AcropolisMain.vue'; // @ is an alias to /src\n\n@Options({\n  components: {\n    AcropolisMain,\n  },\n})\nexport default class Home extends Vue {}\n","import { render } from \"./Home.vue?vue&type=template&id=1d6ccdf8&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Proyectos\\\\acropolisgame\\\\acropolis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from 'vue-router'\nimport Home from '../views/Home.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  // {\n  //   path: '/about',\n  //   name: 'About',\n  //   // route level code-splitting\n  //   // this generates a separate chunk (about.[hash].js) for this route\n  //   // which is lazy-loaded when the route is visited.\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  // }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\ncreateApp(App).use(router).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkacropolis\"] = self[\"webpackChunkacropolis\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(38903); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementBlock","_createVNode","_component_router_view","script","__exports__","render","_hoisted_1","class","_ctx","_cache","$props","$setup","$data","$options","_component_AcropolisMain","_resolveComponent","_openBlock","_createElementVNode","style","_hoisted_4","_hoisted_3","_hoisted_8","_hoisted_2","onClick","loadingBar","scene","progressBar","add","graphics","progressBox","text","fillStyle","fillRect","load","on","value","console","log","clear","file","src","destroy","pathHandler","url","pathPrefix","loadImage","key","image","loadTilemapTiledJSON","tilemapTiledJSON","loadSpritesheet","frameSizing","spritesheet","frameSize","frameWidth","frameHeight","FRAME_SIZE_32_32","FRAME_SIZE_96_96","FRAME_SIZE_16_16","animatedPlayer","running","frames","anims","generateFrameNumbers","start","end","frameRate","repeat","create","idle","attack","mining","gathering","chopping","fishing","watering","shoveling","runningShoes","idleShoes","attackShoes","miningShoes","gatheringShoes","choppingShoes","fishingShoes","wateringShoes","shovelingShoes","runningHair","idleHair","attackHair","miningHair","gatheringHair","choppingHair","fishingHair","wateringHair","shovelingHair","runningClothes","idleClothes","attackClothes","miningClothes","gatheringClothes","choppingClothes","fishingClothes","wateringClothes","shovelingClothes","cooldownTimer","cooldownTime","timer","currentTime","isReady","triggered","timeCounter","deltaTime","trigger","createGameControllerSystem","socket","inputKeys","keys","input","keyboard","addKeys","inputKeysList","split","activePointer","defineSystem","world","currentPlayer","window","acropolis","networkSystem","getLocalEntityByNetworkId","currentPlayerId","timeSystem","clientDeltaTimeNoFR","i","length","isDown","emit","x","position","y","worldX","worldY","action","Vector2","Types","Actions","defineComponent","actions","GameBarFactory","type","parentRef","currentStats","max","current","Position","TargetPosition","Body","texture","Shoes","Hair","Clothes","Resource","createSpriteSystem","textures","spriteQuery","defineQuery","spriteQueryEnter","enterQuery","spriteQueryExit","exitQuery","getLocalEntityByLocalId","enterEntities","id","entity","sprites","body","sprite","clothes","shoes","hair","entities","cameras","main","startFollow","clientDeltaTime","correction","zoom","roundPixels","exitEntities","createEntitySystem","networkEntities","getNetworkEntities","localEntitiesIds","getNetworkEntitiesIDsByLocalID","localEntitiesByNetworkId","getLocalEntitiesIDsByNetworkID","entityId","Object","entries","entityExists","playerId","addEntity","clonedEntity","JSON","parse","stringify","setLocalEntityByLocalId","setLocalEntityIDbyNetworkID","setNetworkEntityIDbyLocalID","addComponent","resourceId","localId","networkId","exist","removeEntity","Number","lerp","amt","getDistance","Vector1","Math","sqrt","pow","flipPlayerX","flip","flipX","createTargetMovementSystem","movementQuery","getNetworkEntityByLocalId","inventory","inventoryOpen","localEntity","distance","target","leftButtonDown","leftButtonReleased","round","createTimeSystem","clientLastUpdate","Date","now","clientLastDeltaTime","clientNow","playerPlayAnimation","animationKey","playerInstance","play","createAnimationSystem","lastAnimation","allPlayers","createResourceSpriteSystem","resourceQuery","resourceQueryEnter","resourceQueryExit","category","setScale","setFrame","createHealthBarSystem","healthBarDecoration","setScrollFactor","healthBar","networkEntity","healthPoints","multiplier","setCrop","createItemsSystem","initBackpack","counter","inventoryLayout","layoutX","layoutY","inventoryId","generateInventoryLayout","push","itemId","makeItemDraggable","items","setInteractive","setData","qty","draggable","hitArea","Phaser","Geom","Rectangle","hitAreaCallback","Contains","setDraggable","updateLayoutCounter","updateInventoryLayoutItem","item","forEach","inventoryItem","setItemImage","manageDnDInventory","pointer","gameObject","dragX","dragY","Snap","To","currentItemInventory","find","invItem","getData","itemToUpdate","createBackPackInventory","backpack","topOnly","setName","openCloseBackpackInventory","objectsClicked","name","setVisible","visible","getNetworkEntityByNetworkID","networkItem","setText","quantity","visibility","createSkillsSystem","skillPosition","skill","Game","init","data","this","lobbyScene","preload","createWorld","entitySystem","itemsSystem","gameControllerSystem","spriteSystem","skillsSystem","healthBarSystem","animationSystem","targetMovementSystem","resourceSpriteSystem","map","make","tilemap","tileWidth","tileHeight","tileset","addTilesetImage","createLayer","setBounds","mouse","disableContextMenu","setInterval","networkUpdateStateSystem","networkEntitiesIDsByLocalID","localEntitiesIDsByNetworkID","localEntities","deleteNetworkEntityIDByLocalID","deleteLocalEntityIDByNetworkID","deleteLocalEntity","getLocalEntityIDbyNetworkID","getLocalEntities","getNetworkEntityIDbyLocalID","io","location","origin","path","isLoggedIn","loginText","methods","initGame","test","async","once","socketId","web3","Web3","ethereum","request","method","address","eth","getAccounts","token","Web3Token","msg","personal","sign","mounted","setTimeout","config","scale","parent","mode","width","height","game","Home","Vue","Options","components","AcropolisMain","routes","component","router","createRouter","history","createWebHashHistory","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}